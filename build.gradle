/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'josebovet' at '7/1/15 10:13 AM' with Gradle 2.4
 *
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.4/userguide/tutorial_groovy_projects.html
 */
import java.text.SimpleDateFormat


buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        //classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
        //classpath 'com.github.ben-manes:gradle-versions-plugin:0.11.3'
    }
}

// Apply the groovy plugin to add support for Groovy
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'jacoco'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // We use the latest groovy 2.x version for building this library
    compile 'org.codehaus.groovy:groovy-all:2.4.3'
    compile 'com.github.groovy-wslite:groovy-wslite:1.1.2'

    // We use the awesome Spock testing and specification framework
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'junit:junit:4.12'
}

Date buildTimeAndDate = new Date()
ext {
    buildDate = new SimpleDateFormat('dd-MMM-yyyy').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('hh:mm aa').format(buildTimeAndDate)
}

def jarManifestAttributes = [
        'Built-By'  : System.properties['user.name'],
        'Created-By': System.properties['java.version'] + ' (' + System.properties['java.vendor'] + ' ' + System.getProperty("java.vm.version") + ")",
        'Build-Date': buildDate,
        'Build-Time': buildTime]

jar {
    manifest {
        attributes(jarManifestAttributes)
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}